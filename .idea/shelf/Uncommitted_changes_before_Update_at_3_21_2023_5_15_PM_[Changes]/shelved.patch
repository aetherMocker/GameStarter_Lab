Index: app/src/main/java/edu/up/cs301/pig/PigLocalGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.up.cs301.pig;\r\n\r\nimport edu.up.cs301.game.GamePlayer;\r\nimport edu.up.cs301.game.LocalGame;\r\nimport edu.up.cs301.game.actionMsg.GameAction;\r\nimport edu.up.cs301.game.infoMsg.GameState;\r\n\r\nimport android.util.Log;\r\n\r\nimport java.util.Random;\r\n\r\n// dummy comment, to see if commit and push work from srvegdahl account\r\n\r\n/**\r\n * class PigLocalGame controls the play of the game\r\n *\r\n * @author Andrew M. Nuxoll, modified by Steven R. Vegdahl\r\n * @version February 2016\r\n */\r\npublic class PigLocalGame extends LocalGame {\r\n\r\n    private PigGameState pigGameState;\r\n\r\n    /**\r\n     * This ctor creates a new game state\r\n     */\r\n    public PigLocalGame() {\r\n        pigGameState = new PigGameState();\r\n    }\r\n\r\n    /**\r\n     * can the player with the given id take an action right now?\r\n     */\r\n    @Override\r\n    protected boolean canMove(int playerIdx) {\r\n        if(playerIdx == pigGameState.getPlayerID()) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is called when a new action arrives from a player\r\n     *\r\n     * @return true if the action was taken or false if the action was invalid/illegal.\r\n     */\r\n    @Override\r\n    protected boolean makeMove(GameAction action) {\r\n        if (action instanceof PigHoldAction) {\r\n            if (pigGameState.getPlayerID() == 0) {\r\n                pigGameState.setPlayer0Score(pigGameState.getPlayer0Score() + pigGameState.getRunningTotalScore());\r\n                pigGameState.setRunningTotalScore(0);\r\n                pigGameState.setPlayerID(1);\r\n            }\r\n            if (pigGameState.getPlayerID() == 1) {\r\n                pigGameState.setPlayer1Score(pigGameState.getPlayer1Score() + pigGameState.getRunningTotalScore());\r\n                pigGameState.setRunningTotalScore(0);\r\n                pigGameState.setPlayerID(0);\r\n            }\r\n            return true;\r\n        }\r\n        else if (action instanceof PigRollAction) {\r\n            Random r = new Random();\r\n            pigGameState.setDieValue(r.nextInt(5) +1);\r\n            if (pigGameState.getDieValue() != 1) {\r\n                pigGameState.setRunningTotalScore(pigGameState.getRunningTotalScore() + pigGameState.getDieValue());\r\n                return true;\r\n            }\r\n            else {\r\n                pigGameState.setRunningTotalScore(0);\r\n                if (pigGameState.getPlayerID() == 1) {\r\n                    pigGameState.setPlayerID(0);\r\n                }\r\n                else {\r\n                    pigGameState.setPlayerID(1);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }//makeMove\r\n\r\n    /**\r\n     * send the updated state to a given player\r\n     */\r\n    @Override\r\n    protected void sendUpdatedStateTo(GamePlayer p) {\r\n        PigGameState pigGameState1 = new PigGameState(pigGameState);\r\n        p.sendInfo(pigGameState);\r\n    }//sendUpdatedSate\r\n\r\n    /**\r\n     * Check if the game is over\r\n     *\r\n     * @return\r\n     * \t\ta message that tells who has won the game, or null if the\r\n     * \t\tgame is not over\r\n     */\r\n    @Override\r\n    protected String checkIfGameOver() {\r\n        if (pigGameState.getPlayer0Score() >= 50) {\r\n            return \"Game over! Player 0 won with a score of \" + pigGameState.getPlayer0Score();\r\n        }\r\n        else if (pigGameState.getPlayer1Score() >= 50) {\r\n            return \"Game over! Player 1 won with a score of \" + pigGameState.getPlayer1Score();\r\n        }\r\n        return null;\r\n    }\r\n\r\n}// class PigLocalGame\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/up/cs301/pig/PigLocalGame.java b/app/src/main/java/edu/up/cs301/pig/PigLocalGame.java
--- a/app/src/main/java/edu/up/cs301/pig/PigLocalGame.java	(revision 67618e61cd134e136c8ac98e05e80dd8d3ea7435)
+++ b/app/src/main/java/edu/up/cs301/pig/PigLocalGame.java	(date 1679443722805)
@@ -90,7 +90,7 @@
     @Override
     protected void sendUpdatedStateTo(GamePlayer p) {
         PigGameState pigGameState1 = new PigGameState(pigGameState);
-        p.sendInfo(pigGameState);
+        p.sendInfo(pigGameState1);
     }//sendUpdatedSate
 
     /**
Index: app/src/main/java/edu/up/cs301/pig/PigHumanPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.up.cs301.pig;\r\n\r\nimport edu.up.cs301.game.GameHumanPlayer;\r\nimport edu.up.cs301.game.GameMainActivity;\r\nimport edu.up.cs301.game.R;\r\nimport edu.up.cs301.game.infoMsg.GameInfo;\r\n\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.view.View.OnClickListener;\r\n\r\n/**\r\n * A GUI for a human to play Pig. This default version displays the GUI but is incomplete\r\n *\r\n *\r\n * @author Andrew M. Nuxoll, modified by Steven R. Vegdahl\r\n * @version February 2016\r\n */\r\npublic class PigHumanPlayer extends GameHumanPlayer implements OnClickListener {\r\n\r\n\t/* instance variables */\r\n\r\n    // These variables will reference widgets that will be modified during play\r\n    private TextView    playerScoreTextView = null;\r\n    private TextView    oppScoreTextView    = null;\r\n    private TextView    turnTotalTextView   = null;\r\n    private TextView    messageTextView     = null;\r\n    private ImageButton dieImageButton      = null;\r\n    private Button      holdButton          = null;\r\n\r\n    // the android activity that we are running\r\n    private GameMainActivity myActivity;\r\n\r\n    /**\r\n     * constructor does nothing extra\r\n     */\r\n    public PigHumanPlayer(String name) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * Returns the GUI's top view object\r\n     *\r\n     * @return\r\n     * \t\tthe top object in the GUI's view heirarchy\r\n     */\r\n    public View getTopView() {\r\n        return myActivity.findViewById(R.id.top_gui_layout);\r\n    }\r\n\r\n    /**\r\n     * callback method when we get a message (e.g., from the game)\r\n     *\r\n     * @param info\r\n     * \t\tthe message\r\n     */\r\n    @Override\r\n    public void receiveInfo(GameInfo info) {\r\n        //TODO You will implement this method to receive state objects from the game\r\n    }//receiveInfo\r\n\r\n    /**\r\n     * this method gets called when the user clicks the die or hold button. It\r\n     * creates a new PigRollAction or PigHoldAction and sends it to the game.\r\n     *\r\n     * @param button\r\n     * \t\tthe button that was clicked\r\n     */\r\n    public void onClick(View button) {\r\n        //TODO  You will implement this method to send appropriate action objects to the game\r\n    }// onClick\r\n\r\n    /**\r\n     * callback method--our game has been chosen/rechosen to be the GUI,\r\n     * called from the GUI thread\r\n     *\r\n     * @param activity\r\n     * \t\tthe activity under which we are running\r\n     */\r\n    public void setAsGui(GameMainActivity activity) {\r\n\r\n        // remember the activity\r\n        myActivity = activity;\r\n\r\n        // Load the layout resource for our GUI\r\n        activity.setContentView(R.layout.pig_layout);\r\n\r\n        //Initialize the widget reference member variables\r\n        this.playerScoreTextView = (TextView)activity.findViewById(R.id.yourScoreValue);\r\n        this.oppScoreTextView    = (TextView)activity.findViewById(R.id.oppScoreValue);\r\n        this.turnTotalTextView   = (TextView)activity.findViewById(R.id.turnTotalValue);\r\n        this.messageTextView     = (TextView)activity.findViewById(R.id.messageTextView);\r\n        this.dieImageButton      = (ImageButton)activity.findViewById(R.id.dieButton);\r\n        this.holdButton          = (Button)activity.findViewById(R.id.holdButton);\r\n\r\n        //Listen for button presses\r\n        dieImageButton.setOnClickListener(this);\r\n        holdButton.setOnClickListener(this);\r\n\r\n    }//setAsGui\r\n\r\n}// class PigHumanPlayer\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/up/cs301/pig/PigHumanPlayer.java b/app/src/main/java/edu/up/cs301/pig/PigHumanPlayer.java
--- a/app/src/main/java/edu/up/cs301/pig/PigHumanPlayer.java	(revision 67618e61cd134e136c8ac98e05e80dd8d3ea7435)
+++ b/app/src/main/java/edu/up/cs301/pig/PigHumanPlayer.java	(date 1679444135892)
@@ -60,6 +60,7 @@
      */
     @Override
     public void receiveInfo(GameInfo info) {
+        //System.out.println("Hello there!");
         //TODO You will implement this method to receive state objects from the game
     }//receiveInfo
 
